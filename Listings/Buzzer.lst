C51 COMPILER V9.60.7.0   BUZZER                                                            02/05/2025 17:31:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE BUZZER
OBJECT MODULE PLACED IN .\Objects\Buzzer.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Buzzer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Bu
                    -zzer.lst) TABS(2) OBJECT(.\Objects\Buzzer.obj)

line level    source

   1          #include "Buzzer.h"
   2          #include "GPIO.h"
   3          #include "STC8H_PWM.h"
   4          #include "NVIC.h"
   5          #include "Switch.h"
   6          
   7          //           C`    D`     E`   F`    G`    A`    B`    C``
   8          u16 hz[] = {1047, 1175, 1319, 1397, 1568, 1760, 1976, 2093};
   9          
  10          //            C    D    E    F    G    A    B    C`
  11          //u16 hz[] = {523, 587, 659, 698, 784, 880, 988, 1047};
  12          
  13          static void GPIO_config(void) {
  14   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  15   1        GPIO_InitStructure.Pin  = GPIO_PIN;   //指定要初始化的IO,
  16   1        GPIO_InitStructure.Mode = GPIO_OUT_PP;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  17   1        GPIO_Inilize(GPIO_PORT, &GPIO_InitStructure);//初始化
  18   1      }
  19          void  PWM_config(u16 hz_val)
  20          {
  21   1        PWMx_InitDefine   PWMx_InitStructure;
  22   1        
  23   1        u16 period = (MAIN_Fosc / hz_val);  // 计算每个周期的计数值
  24   1        
  25   1        // 配置PWM5
  26   1        PWMx_InitStructure.PWM_Mode       = CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATCH_
             -INVALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
  27   1        PWMx_InitStructure.PWM_Duty       = (u16)(period * 0.01); //PWM占空比时间, 0~Period
  28   1        PWMx_InitStructure.PWM_EnoSelect    = ENO5P;      //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4P
             -,ENO4N / ENO5P,ENO6P,ENO7P,ENO8P
  29   1        PWM_Configuration(PWM5, &PWMx_InitStructure);     //初始化PWM,  PWMA,PWMB
  30   1      
  31   1        // 配置PWMB
  32   1        PWMx_InitStructure.PWM_Period   = period - 1;     //周期时间,   0~65535
  33   1        PWMx_InitStructure.PWM_DeadTime = 0;          //死区发生器设置, 0~255
  34   1        PWMx_InitStructure.PWM_MainOutEnable= ENABLE;     //主输出使能, ENABLE,DISABLE
  35   1        PWMx_InitStructure.PWM_CEN_Enable   = ENABLE;     //使能计数器, ENABLE,DISABLE
  36   1        PWM_Configuration(PWMB, &PWMx_InitStructure);     //初始化PWM通用寄存器,  PWMA,PWMB
  37   1      
  38   1        // 切换PWM通道
  39   1        PWM5_SW(PWM5_SW_P00);         //PWM5_SW_P20,PWM5_SW_P17,PWM5_SW_P00,PWM5_SW_P74
  40   1      
  41   1        // 初始化PWMB的中断
  42   1        NVIC_PWM_Init(PWMB,DISABLE,Priority_0);
  43   1      }
  44          // 初始化蜂鸣器
  45          void Buzzer_init(){
  46   1        // 扩展寄存器使能
  47   1        EAXSFR(); 
  48   1        GPIO_config();
  49   1      }
  50          
  51          // 按照指定频率播放
C51 COMPILER V9.60.7.0   BUZZER                                                            02/05/2025 17:31:21 PAGE 2   

  52          void Buzzer_play(u16 hz_val){
  53   1        PWM_config(hz_val);
  54   1      }
  55          
  56          // 根据索引取出对应的音调
  57          void Buzzer_beep(u16 idx){
  58   1        Buzzer_play(hz[idx - 1]);
  59   1      }
  60          
  61          // 停止播放
  62          void Buzzer_stop(){
  63   1        
  64   1        PWMx_InitDefine   PWMx_InitStructure;
  65   1        PWMx_InitStructure.PWM_MainOutEnable= DISABLE;      //主输出使能, ENABLE,DISABLE
  66   1        PWMx_InitStructure.PWM_CEN_Enable   = DISABLE;      //使能计数器, ENABLE,DISABLE
  67   1        PWM_Configuration(PWMB, &PWMx_InitStructure);     //初始化PWM通用寄存器,  PWMA,PWMB
  68   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
